services:
  postgres:
    networks:
      - meetup_network
    mem_limit: 256m
    cpus: 10
    image: postgres:15
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  elasticsearch:
    mem_limit: 512m
    image: elasticsearch:7.17.9
    container_name: elasticsearch
    networks:
      - meetup_network
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ELASTICSEARCH_USERNAME=${ES_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ES_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'

  kibana:
    mem_limit: 256m
    image: kibana:7.17.9
    container_name: kibana
    depends_on:
      - elasticsearch
    volumes:
      - kibana_data:/usr/share/kibana/data
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - '5601:5601'

  rabbitmq:
    networks:
      - meetup_network
    mem_limit: 256m
    cpus: 10
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # порт для AMQP
      - "15672:15672" # порт для веб-интерфейса (можно убрать, если не нужен)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  gateway:
    networks:
      - meetup_network
    mem_limit: 256m
    cpus: 10
    build:
      context: ./
      dockerfile: ./apps/gateway/Dockerfile
    ports:
      - '${PORT}:3000'
    env_file:
      - .env
    depends_on:
      - auth
      - meetup
      - postgres
      - rabbitmq
      - redis
    links:
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./uploads:/usr/src/app/uploads
    command: npm run start:dev gateway && npx prisma migrate dev && npx prisma db seed

  auth:
    networks:
      - meetup_network
    mem_limit: 512m
    cpus: 0.1
    build:
      context: ./
      dockerfile: ./apps/auth-microservice/Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - meetup
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth-microservice && npx prisma migrate dev

  meetup:
    networks:
      - meetup_network
    mem_limit: 256m
    cpus: 10
    build:
      context: ./
      dockerfile: ./apps/meetup-microservice/Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      # - ./uploads:/usr/src/app/uploads
    command: npm run start:dev meetup-microservice && npx prisma migrate dev

  redis:
    mem_limit: 256m
    cpus: 5
    image: redis
    networks:
      - meetup_network
    ports:
      - 6379:6379
    volumes:
      - redis_data:/var/lib/redis

  grafana:
    networks:
      - meetup_network
    depends_on:
      - postgres
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
    ports:
      - 9000:9000
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  rabbitmq_data:
  es_data:
  kibana_data:
  redis_data:
  grafana_data:

networks:
  meetup_network:
